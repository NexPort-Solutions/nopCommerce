@using Nop.Plugin.Misc.Nexport.Models
@using Nop.Plugin.Misc.Nexport.Models.ProductMappings
@inject IJsonHelper Json

@model Nop.Plugin.Misc.Nexport.Models.ProductMappings.NexportProductMappingModel

@{
    Layout = "_AdminPopupLayout";

    //page title
    ViewBag.Title = "Product mapping details";
}

@if (ViewBag.RefreshPage == true)
{
    <script>
        try {
            window.opener.$("#@(Context.Request.Query["containerId"]) #@(Context.Request.Query["btnId"])").click();
        }
        catch (e) { }
    </script>
}

@if (ViewBag.ClosePage == true)
{
    <script>
        window.close();
    </script>
}

@if (Model != null && Model.Id > 0)
{
    Html.AddScriptParts(ResourceLocation.Footer, "~/Plugins/Misc.Nexport/Scripts/bootstrap3-typeahead.js", "", true);

    Html.AddCssFileParts(ResourceLocation.Head, "~/Plugins/Misc.Nexport/Content/nexport-admin.css", "", true);

    <form asp-controller="NexportIntegration" asp-action="EditMapping"
          asp-route-containerId="@Context.Request.Query["containerId"]"
          asp-route-btnId="@Context.Request.Query["btnId"]">
        <div class="content-header clearfix">
            <div class="pull-right">
                <button type="submit" name="save" class="btn bg-blue">
                    <i class="fa fa-floppy-o"></i>
                    @T("Admin.Common.Save")
                </button>
                <button type="submit" name="save-continue" class="btn bg-blue">
                    <i class="fa fa-floppy-o"></i>
                    @T("Admin.Common.SaveContinue")
                </button>
            </div>
        </div>
        <div class="content">
            <div class="form-horizontal">
                <div class="panel-group">
                    <div class="panel panel-default panel-popup">
                        <div class="panel-heading">
                            Product mapping info
                        </div>
                        <div class="panel-body">
                            @await Html.PartialAsync("~/Plugins/Misc.Nexport/Views/ProductMappingDetails.cshtml", Model)
                            <div class="form-group">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="NexportSubscriptionOrgId" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <nop-editor asp-for="NexportSubscriptionOrgId" asp-render-form-control-class="true" />
                                    <span asp-validation-for="NexportSubscriptionOrgId"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="NexportSubscriptionOrgName" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <input type="hidden" name="NexportSubscriptionOrgName" value="@Model.NexportSubscriptionOrgName" />
                                    <div class="form-text-row" id="NexportSubscriptionOrgName">@Model.NexportSubscriptionOrgName</div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="NexportSubscriptionOrgShortName" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <input type="hidden" name="NexportSubscriptionOrgShortName" value="@Model.NexportSubscriptionOrgShortName" />
                                    <div class="form-text-row" id="NexportSubscriptionOrgShortName">@Model.NexportSubscriptionOrgShortName</div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="AutoRedeem" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <nop-editor asp-for="AutoRedeem" />
                                    <span asp-validation-for="AutoRedeem"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="StoreName" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <input type="hidden" name="StoreId" value="@Model.StoreId" />
                                    <div class="form-text-row">@Model.StoreName</div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="IsExtensionProduct" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <nop-editor asp-for="IsExtensionProduct" />
                                    <span asp-validation-for="IsExtensionProduct"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="AllowExtension" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <nop-editor asp-for="AllowExtension" />
                                    <span asp-validation-for="AllowExtension"></span>
                                </div>
                            </div>
                            <div class="form-group hidden" id="renewalWindowOption">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="RenewalWindow" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <nex-duration-picker asp-for="RenewalWindow" asp-value="@Model.RenewalWindow" asp-id="renewal-window-duration-picker" />
                                    <span asp-validation-for="RenewalWindow"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default panel-popup">
                        <div class="panel-heading">
                            <span>Product access expiration</span>
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-sm-5 col-md-3">
                                    <div class="label-wrapper">
                                        <label class="control-label" for="trainingExpirationOption">@T("Plugins.Misc.Nexport.ProductAccessExpirationOption")</label>
                                        <div title="@T("Plugins.Misc.Nexport.ProductAccessExpirationOption.Hint")" data-toggle="tooltip" class="ico-help"><i class="fa fa-question-circle"></i></div>
                                    </div>
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <select class="form-control" id="trainingExpirationOption">
                                        <option value="noExpiration">No expiration</option>
                                        <option value="accessExpirationDate">Use access expiration date</option>
                                        <option value="accessTimeLimit">Use access time limit</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group hidden" id="accessLimitOption">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="AccessTimeLimit" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <nex-duration-picker asp-for="AccessTimeLimit" asp-value="@Model.AccessTimeLimit" asp-id="access-time-limit-duration-picker" />
                                    <span asp-validation-for="AccessTimeLimit"></span>
                                </div>
                            </div>
                            <div class="form-group hidden" id="accessExpirationDateOption">
                                <div class="col-sm-5 col-md-3">
                                    <nop-label asp-for="UtcAccessExpirationDate" />
                                </div>
                                <div class="col-sm-7 col-md-9">
                                    <nop-editor asp-for="UtcAccessExpirationDate" asp-disabled="true" />
                                    <span asp-validation-for="UtcAccessExpirationDate"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (Model.NexportSubscriptionOrgId != null)
                    {
                        <div class="panel panel-default panel-popup">
                            <div class="panel-heading">
                                Product group membership mapping info
                            </div>
                            <div class="panel-body">
                                <div class="sub-panel">
                                    @await Html.PartialAsync("~/Plugins/Misc.Nexport/Views/ProductMappingGroupMembership.cshtml",
                                        new NexportProductGroupMembershipMappingListSearchModel { NexportProductMappingId = Model.Id })
                                </div>

                                <div class="panel panel-default" style="margin-top: 0.5em;">
                                    <div class="panel-heading">
                                        Add new group membership
                                    </div>
                                    <div class="panel-body">
                                        <div class="form-group">
                                            <div class="col-sm-5 col-md-3">
                                                <nop-label asp-for="AddGroupMembershipMappingModel.NexportGroupId" />
                                            </div>
                                            <div class="col-sm-7 col-md-9">
                                                <input class="form-control text-box single-line" id="AddGroupMembership_GroupId" type="text">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-5 col-md-3">
                                                <nop-label asp-for="AddGroupMembershipMappingModel.NexportGroupName" />
                                            </div>
                                            <div class="col-sm-7 col-md-9">
                                                <input type="hidden" id="AddGroupMembership_GroupName" />
                                                <div class="form-text-row" id="AddGroupMembership_GroupName_Display"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-5 col-md-3">
                                                <nop-label asp-for="AddGroupMembershipMappingModel.NexportGroupShortName" />
                                            </div>
                                            <div class="col-sm-7 col-md-9">
                                                <input type="hidden" id="AddGroupMembership_GroupShortName" />
                                                <div class="form-text-row" id="AddGroupMembership_GroupShortName_Display"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-7 col-md-9 col-sm-offset-5 col-md-offset-3">
                                                <button type="button" id="addGroupMembership" class="btn btn-primary" disabled>Add group membership</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="panel panel-default panel-popup">
                        <div class="panel-heading">
                            Supplemental Info Question
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="SupplementalInfoQuestionIds" />
                                </div>
                                <div class="col-md-9">
                                    <nop-select asp-for="SupplementalInfoQuestionIds" asp-items="Model.AvailableSupplementalInfoQuestions" asp-multiple="true" />
                                    <script>
                                        $(document).ready(function() {
                                            var supplementalInfoQuestionIds = $("#@Html.IdFor(model => model.SupplementalInfoQuestionIds)")
                                                .data("kendoMultiSelect");
                                            supplementalInfoQuestionIds.setOptions({
                                                autoClose: false,
                                                filter: "contains"
                                            });

                                            @if (Model.AvailableSupplementalInfoQuestions.Count == 0)
                                            {
                                                <text>
                                                    supplementalInfoQuestionIds.setOptions({
                                                        enable: false,
                                                        placeholder: "No supplemental info question is available"
                                                    });
                                                    supplementalInfoQuestionIds._placeholder();
                                                    supplementalInfoQuestionIds._enable();
                                                </text>
                                            }
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                </div>
        </div>
    </form>

    <script>
        function convertTimeSpan(ts) {
            var days, hours, minutes;
            days = 0;
            hours = 0;
            minutes = 0;
            var timeSpanComponents = ts.split(":");

            if (timeSpanComponents.length === 3) {
                var daysAndHoursParts = timeSpanComponents[0].split(".");
                if (daysAndHoursParts.length === 2) {
                    days = daysAndHoursParts[0];
                    hours = daysAndHoursParts[1];
                }

                minutes = timeSpanComponents[1];
            }

            return {
                days: days,
                hours: hours,
                minutes: minutes
            };
        }

        function initTypeAhead(element, appendToElement, customMatcher, afterSelectionCallbackFunction) {
            $(element).bootstrapTypeahead({
                source: function(query, process) {
                    if (query_cache[query]) {
                        process(query_cache[query]);
                        return;
                    }

                    if (typeof searching != "undefined") {
                        clearTimeout(searching);
                        process([]);
                    }

                    var url = "@Url.Action("SearchNexportDirectory", "NexportIntegration")";
                    searching = setTimeout(function() {
                        return $.getJSON(
                            url,
                            { searchTerm: query },
                            function(data) {
                                // save result to cache, remove next line if you don't want to use cache
                                query_cache[query] = data;
                                // only search if stop typing for 300ms aka fast typers
                                return process(data);
                            }
                        );
                    }, 300);
                },
                autoSelect: false,
                fitToElement: true,
                appendTo: appendToElement,
                matcher: function(item) {
                    return customMatcher(item, this.query);
                },
                displayText: function(item) {
                    return item.name;
                },
                afterSelect: function(selectedItem) {
                    afterSelectionCallbackFunction(selectedItem);
                }
            });
        }

        function organizationTypeAheadMatcher(item, query, type) {
            type = type || 0;

            if (!item.type && type === 1) {
                return false;
            } else {
                if (item.type && item.type !== type)
                    return false;
            }

            var orgName = item.name;
            var orgShortName = item.short_name;
            var isMatch = orgName.toLowerCase().indexOf(query.toLowerCase());
            if (~isMatch)
                return true;

            return ~orgShortName.toLowerCase().indexOf(query.toLowerCase());
        }

        function durationPickerChanged(container, submitInputElement) {
            console.log(container);

            var days = parseInt(container.find("input[data-duration=days]").val(), 10) || 0;
            var hours = parseInt(container.find("input[data-duration=hours]").val(), 10) || 0;
            var minutes = parseInt(container.find("input[data-duration=minutes]").val(), 10) || 0;

            var duration = +days + "." + +hours + ":" + +minutes + ":00";
            container.find(submitInputElement).val(duration);
        }

        function initDurationPicker(container, submitInputElement, value) {
            var touchSpinConfig = {
                decimals: 0,
                verticalbuttons: true,
                verticalupclass: "glyphicon glyphicon-chevron-up",
                verticaldownclass: "glyphicon glyphicon-chevron-down",
                buttondown_class: "btn",
                buttonup_class: "btn"
            };

            var durationPickerDaysElement = container.find("input[data-duration=days]");
            durationPickerDaysElement.TouchSpin($.extend({ min: 0, max: 10000 }, touchSpinConfig)).change(function () {
                durationPickerChanged(container, submitInputElement);
            });

            var durationPickerHoursElement = container.find("input[data-duration=hours]");
            durationPickerHoursElement.TouchSpin($.extend({ min: 0, max: 23 }, touchSpinConfig)).change(function () {
                durationPickerChanged(container, submitInputElement);
            });

            var durationPickerMinutesElement = container.find("input[data-duration=minutes]");
            durationPickerMinutesElement.TouchSpin($.extend({ min: 0, max: 59 }, touchSpinConfig)).change(function () {
                durationPickerChanged(container, submitInputElement);
            });

            if (value && value.indexOf(":") !== -1) {
                var duration = convertTimeSpan(value);
                durationPickerDaysElement.val(duration.days);
                durationPickerHoursElement.val(duration.hours);
                durationPickerMinutesElement.val(duration.minutes);
            }
        }

        $(document).ready(function () {
            $.fn.bootstrapTypeahead = $.fn.typeahead.noConflict();

            window.query_cache = {};

            var groupIdInputElement = $("#AddGroupMembership_GroupId");

            var hasExpirationDateValue = @Json.Serialize(Model.UtcAccessExpirationDate.HasValue);
            if (!hasExpirationDateValue) {
                $("#UtcAccessExpirationDate").data("kendoDateTimePicker").enable(false);
            } else {
                $("#trainingExpirationOption").val("accessExpirationDate");
                $("#accessExpirationDateOption").removeClass("hidden");
            }

            var hasAccessTimeLimitValue = @Json.Serialize(!string.IsNullOrWhiteSpace(Model.AccessTimeLimit));
            if (!hasAccessTimeLimitValue) {
                $("#AccessTimeLimit").prop("disabled", true);
            } else {
                $("#trainingExpirationOption").val("accessTimeLimit");
                $("#accessLimitOption").removeClass("hidden");
            }

            $("#trainingExpirationOption").on("change",
                function(e) {
                    if ($(this).val() === "accessTimeLimit") {
                        $("#accessLimitOption").removeClass("hidden");
                        $("#accessExpirationDateOption").addClass("hidden");

                        $("#AccessTimeLimit").prop("disabled", false);
                        $("#UtcAccessExpirationDate").data("kendoDateTimePicker").enable(false);
                    } else if ($(this).val() === "accessExpirationDate") {
                        $("#accessLimitOption").addClass("hidden");
                        $("#accessExpirationDateOption").removeClass("hidden");

                        $("#UtcAccessExpirationDate").data("kendoDateTimePicker").enable(true);
                        $("#AccessTimeLimit").prop("disabled", true);
                    } else if ($(this).val() === "noExpiration") {
                        $("#accessLimitOption").addClass("hidden");
                        $("#accessExpirationDateOption").addClass("hidden");

                        $("#UtcAccessExpirationDate").data("kendoDateTimePicker").enable(false);
                        $("#AccessTimeLimit").prop("disabled", true);
                    }
                });

            var accessTimeLimitDurationPicker = $("#access-time-limit-duration-picker");
            var accessTimeLimitDuration = hasAccessTimeLimitValue ? "@Model.AccessTimeLimit" : null;
            initDurationPicker(accessTimeLimitDurationPicker, $("#@Html.IdFor(model => model.AccessTimeLimit)"), accessTimeLimitDuration);

            var renewalWindowDurationPicker = $("#renewal-window-duration-picker");

            $("#@Html.IdFor(model => model.AllowExtension)").on("change",
                function(e) {
                    if (this.checked) {
                        $("#renewalWindowOption").removeClass("hidden");
                    } else {
                        $("#renewalWindowOption").addClass("hidden");
                    }
                });

            var allowExtensionValue = @Json.Serialize(Model.AllowExtension);
            if (!allowExtensionValue) {
                $("#renewalWindowOption").addClass("hidden");
            } else {
                $("#renewalWindowOption").removeClass("hidden");
            }

            var renewalWindowDuration =  @Json.Serialize(!string.IsNullOrWhiteSpace(Model.RenewalWindow)) ? "@Model.RenewalWindow" : null;
            initDurationPicker(renewalWindowDurationPicker, $("#@Html.IdFor(model => model.RenewalWindow)"), renewalWindowDuration);

            initTypeAhead($("#NexportSubscriptionOrgId"), $("#NexportSubscriptionOrgId").parent(),
                function(item, query) {
                    return organizationTypeAheadMatcher(item, query, 0);
                },
                function(selectedItem) {
                    $("#NexportSubscriptionOrgId").val(selectedItem.id);
                    $("#NexportSubscriptionOrgName").html(selectedItem.name);
                    $("input[name=NexportSubscriptionOrgName]").val(selectedItem.name);
                    $("#NexportSubscriptionOrgShortName").html(selectedItem.short_name);
                    $("input[name=NexportSubscriptionOrgShortName]").val(selectedItem.short_name);
                });

            initTypeAhead(groupIdInputElement, groupIdInputElement.parent(),
                function(item, query) {
                    return organizationTypeAheadMatcher(item, query, 1);
                },
                function(selectedItem) {
                    $("#addGroupMembership").attr("disabled", false);

                    groupIdInputElement.val(selectedItem.id);
                    $("#AddGroupMembership_GroupName_Display").html(selectedItem.name);
                    $("#AddGroupMembership_GroupName").val(selectedItem.name);
                    $("#AddGroupMembership_GroupShortName_Display").html(selectedItem.short_name);
                    $("#AddGroupMembership_GroupShortName").val(selectedItem.short_name);
                });

            $("#addGroupMembership").click(function() {
                var groupId = groupIdInputElement.val();
                var groupName = $("#AddGroupMembership_GroupName").val();
                var groupShortName = $("#AddGroupMembership_GroupShortName").val();

                if (groupId === null || groupId === "00000000-0000-0000-0000-000000000000") {
                    return;
                }

                $("#addGroupMembership").attr('disabled', true);

                var postData = {
                    nexportGroupId: groupId,
                    nexportGroupName: groupName,
                    nexportGroupShortName: groupShortName,
                    nexportProductMappingId: '@Model.Id'
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("AddGroupMembershipMapping", "NexportIntegration"))",
                    data: postData,
                    success: function (data, textStatus, jqXHR) {
                        if (!data.Result) {
                            return;
                        }
                        updateTable("#product-mapping-group-memberships-grid");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error(errorThrown);
                    },
                    complete: function (jqXHR, textStatus) {
                        //$("#addGroupMembership").attr("disabled", false);

                        groupIdInputElement.val("");
                        $("#AddGroupMembership_GroupName_Display").empty();
                        $("#AddGroupMembership_GroupName").val("");
                        $("#AddGroupMembership_GroupShortName_Display").empty();
                        $("#AddGroupMembership_GroupShortName").val("");
                    }
                });
            });
        });

        //# sourceURL=ProductMappingDetailsPopup.js
    </script>
}
