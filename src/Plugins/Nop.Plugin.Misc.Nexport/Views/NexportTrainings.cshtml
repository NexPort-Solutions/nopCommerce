@model Nop.Plugin.Misc.Nexport.Models.Customer.NexportTrainingListModel

@{
    Layout = "_ColumnsTwo";

    Html.AddTitleParts("Nexport Trainings");
    Html.AppendPageCssClassParts("html-account-page");
    Html.AddCssFileParts(ResourceLocation.Head, "~/Plugins/Misc.Nexport/Content/nexport-store.css");
}

@section left
{
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = 1001 })
}

<div class="page account-page order-list-page">
    <div class="page-title">
        <h1>@T("Account.MyAccount") - Nexport Trainings</h1>
    </div>
    <div class="page-body">
        @if (Model?.RedemptionOrganizations != null && Model.RedemptionOrganizations.Count > 0)
        {
            <div class="nexport-training-list">
                <input id="userId" type="hidden" value="@Model.UserId" />
                @foreach (var org in Model.RedemptionOrganizations)
                {
                    <div class="section nexport-training-item">
                        <div class="title">
                           <a href="javascript:void(0);" data-org-id="@org.OrgId" onclick="navigateToNexport(this); return false;"
                               class="button-2 order-details-button" style="font-size: 1em;">@org.OrgName (@org.OrgShortName)</a>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>
<script asp-location="Footer">
    function navigateToNexport(element) {
        var orgId = $(element).data("org-id");
        var userId = $("#userId").val();
        if (orgId && userId) {
            var url = "@Url.Action("GoToNexportOrg", "NexportIntegration")";
            url += "?orgId=" + orgId + "&userId=" + userId;

            $.ajax({
                url: url,
                type: "GET",
                async: false,
                success: function(result) {
                    if (result && result.RedirectUrl) {
                        window.open(result.RedirectUrl, "_blank");
                    }
                },
                error: function(xhr, textStatus, errorThrown) {
                    var response = xhr.responseJSON;
                    if (response && response.Error) {
                        displayBarNotification(response.Error, "error");
                    }
                }
            });
        }
    }
</script>