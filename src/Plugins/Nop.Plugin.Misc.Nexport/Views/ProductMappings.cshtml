@using Microsoft.AspNetCore.Routing
@using Nop.Plugin.Misc.Nexport.Domain.Enums
@using Nop.Plugin.Misc.Nexport.Models
@using Nop.Web.Framework.Models.DataTables
@model NexportProductMappingListSearchModel

@{
    Html.AddScriptParts(ResourceLocation.Footer, "~/Plugins/Misc.Nexport/Scripts/bootstrap3-typeahead.js", "", true);
}

<div class="panel-body">
    <div class="sub-panel" id="product-mapping-container">
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "product-mappings-grid",
            UrlRead = new DataUrl("GetProductMappings", "NexportIntegration",
                        new RouteValueDictionary {
                            { "nexportProductId", Model.NexportProductId },
                            { "nexportProductType", Model.NexportProductType }
                        }),
            UrlDelete = new DataUrl("DeleteMapping", "NexportIntegration", null),
            UrlUpdate = new DataUrl("EditMapping", "NexportIntegration", null),
            Length = Model.PageSize,
            LengthMenu = Model.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
                {
                    new ColumnProperty(nameof(NexportProductMappingModel.NopProductId))
                    {
                        Title = "Nop Product Id",
                        Width = "50",
                    },
                    new ColumnProperty(nameof(NexportProductMappingModel.DisplayName))
                    {
                        Title = "Display Name",
                        Width = "150"
                    },
                    new ColumnProperty(nameof(NexportProductMappingModel.UtcLastModifiedDate))
                    {
                        Title = "Last Modified Date",
                        Width = "150",
                        Render = new RenderDate()
                    },
                    new ColumnProperty(nameof(NexportProductMappingModel.UtcLastSynchronizationDate))
                    {
                        Title = "Last Synchronized Date",
                        Width = "150",
                        Render = new RenderDate(),
                        AutoWidth = false
                    },
                    new ColumnProperty(nameof(NexportProductMappingModel.NexportSubscriptionOrgId))
                    {
                        Title = "Subscription Org Id",
                        Width = "150",
                        Editable = true,
                        EditType = EditType.String
                    },
                    new ColumnProperty(nameof(NexportProductMappingModel.NopProductId))
                    {
                        Title = T("Admin.Common.View").Text,
                        Width = "50",
                        ClassName = NopColumnClassDefaults.Button,
                        Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/", nameof(NexportProductMappingModel.NopProductId))),
                        AutoWidth = false
                    },
                    new ColumnProperty(nameof(NexportProductMappingModel.Id))
                    {
                        Title = T("Admin.Common.Edit").Text,
                        Width = "100",
                        ClassName =  NopColumnClassDefaults.Button,
                        Render = new RenderButtonsInlineEdit(),
                        AutoWidth = false
                    },
                    new ColumnProperty(nameof(NexportProductMappingModel.Id))
                    {
                        Title = T("Admin.Common.Delete").Text,
                        Width = "50",
                        Render = new RenderButtonRemove("Delete Mapping"),
                        ClassName = NopColumnClassDefaults.Button,
                        AutoWidth = false
                    }
                }
        })

        <input type="submit" id="btnRefreshMappings" style="display: none">
    </div>
</div>

<script>
    function renderCustomMappingView(data, type, row, meta) {
        var url = "@Url.Action("ShowProductDetails", "NexportIntegration")" +
            "?nexportProductId=" + data + "&nexportProductType=@NexportProductTypeEnum.Catalog";

        return "<a href=\""+ url +"\" class=\"btn btn-default\"><i class=\"fa fa-eye\"></i>@T("Admin.Common.View")</button>";
    }

    $(document).ready(function () {
        $.fn.bootstrapTypeahead = $.fn.typeahead.noConflict();

        $("#btnRefreshMappings").click(function () {
            //refresh grid
            $("#product-mappings-grid").DataTable().ajax.reload();

            //return false to don't reload a page
            return false;
        });

        window.query_cache = {};

        $(document).on("click",
            "[data-columnname=NexportSubscriptionOrgId] .userinput",
            function (e) {
                $(e.target).bootstrapTypeahead({
                    source: function(query, process) {
                        if (query_cache[query]) {
                            process(query_cache[query]);
                            return;
                        }

                        if (typeof searching != "undefined") {
                            clearTimeout(searching);
                            process([]);
                        }

                        var url = "@Url.Action("GetOrganizations", "NexportIntegration")";
                        searching = setTimeout(function() {
                                return $.getJSON(
                                    url,
                                    { searchTerm: query },
                                    function(data) {
                                        // save result to cache, remove next line if you don't want to use cache
                                        query_cache[query] = data;
                                        // only search if stop typing for 300ms aka fast typers
                                        return process(data);
                                    }
                                );
                            },
                            300);
                    },
                    autoSelect: false,
                    fitToElement: true,
                    appendTo: "body",
                    displayText: function(item) {
                        return item.name;
                    },
                    afterSelect: function(selectedItem) {
                        $(e.target).val(selectedItem.org_id);
                    }
                });
            });
    });
</script>