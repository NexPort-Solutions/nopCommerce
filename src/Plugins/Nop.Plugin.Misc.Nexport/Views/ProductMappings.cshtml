@using Microsoft.AspNetCore.Routing
@using Nop.Plugin.Misc.Nexport.Domain.Enums
@using Nop.Plugin.Misc.Nexport.Models
@using Nop.Web.Framework.Models.DataTables
@model NexportProductMappingListSearchModel

<div class="panel-body">
    <div class="sub-panel" id="product-mapping-container">
        @await Html.PartialAsync("Table", new DataTablesModel
        {
           Name = "product-mappings-grid",
           UrlRead = new DataUrl("GetProductMappings", "NexportIntegration",
                            new RouteValueDictionary {
                                { "nexportProductId", Model.NexportProductId },
                                { "nexportProductType", Model.NexportProductType }
                            }),
           UrlDelete = new DataUrl("DeleteMapping", "NexportIntegration", null),
           UrlUpdate = new DataUrl("EditMapping", "NexportIntegration", null),
           Length = Model.PageSize,
           LengthMenu = Model.AvailablePageSizes,
           ColumnCollection = new List<ColumnProperty>
                    {
                        new ColumnProperty(nameof(NexportProductMappingModel.NopProductId))
                        {
                            Title = "Product Id",
                            Width = "50",
                        },
                        new ColumnProperty(nameof(NexportProductMappingModel.DisplayName))
                        {
                            Title = "Display Name",
                            Width = "150"
                        },
                        new ColumnProperty(nameof(NexportProductMappingModel.Id))
                        {
                            Title = "Subscription Organization",
                            Width = "150",
                            Render = new RenderCustom("renderSubscriptionOrgName")
                        },
                        new ColumnProperty(nameof(NexportProductMappingModel.StoreMappingNames))
                        {
                            Title = "Store Mappings",
                            Width = "150",
                        },
                        new ColumnProperty(nameof(NexportProductMappingModel.UtcLastModifiedDate))
                        {
                            Title = "Last Modified Date",
                            Width = "150",
                            Render = new RenderCustom("renderLastModifiedDate")
                        },
                        new ColumnProperty(nameof(NexportProductMappingModel.UtcLastSynchronizationDate))
                        {
                            Title = "Last Synchronized Date",
                            Width = "150",
                            Render = new RenderDate(),
                            AutoWidth = false
                        },
                        new ColumnProperty(nameof(NexportProductMappingModel.NopProductId))
                        {
                            Title = "View Product",
                            Width = "50",
                            ClassName = NopColumnClassDefaults.Button,
                            Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/", nameof(NexportProductMappingModel.NopProductId))),
                            AutoWidth = false
                        },
                        new ColumnProperty(nameof(NexportProductMappingModel.Id))
                        {
                            Width = "100",
                            Render = new RenderCustom("renderViewMappingDetails"),
                            ClassName = NopColumnClassDefaults.Button,
                            AutoWidth = false
                        },
                        new ColumnProperty(nameof(NexportProductMappingModel.Id))
                        {
                            Width = "50",
                            Render = new RenderButtonRemove("Delete mapping"),
                            ClassName = NopColumnClassDefaults.Button,
                            AutoWidth = false
                        }
                    }
        })

        <input type="submit" id="btnRefreshMappings" style="display: none">
    </div>
</div>

<script>
    function renderViewMappingDetails(data, type, row, meta) {
        var url = "@Url.Action("ProductMappingDetailsPopup", "NexportIntegration")" + "?mappingId=" + row.Id + "&containerId=";

        if (row.Type === 0) {
            url += "nexport-catalog-panels";
        } else if (row.Type === 1) {
            url += "nexport-section-panels";
        } else {
            url += "nexport-training-plan-panels";
        }

        url += "&btnId=btnRefreshMappings";

        return "<button onclick=\"javascript:OpenWindow('" + url + "', 800, 800, true); return false;" +
            "\" class=\"btn btn-default\"><i class=\"fa fa-info\"></i>View/edit mapping details</button>";
    }

    function renderSubscriptionOrgName(data, type, row, meta) {
        var textRenderer = $.fn.dataTable.render.text().display;
        var subOrgName = row.NexportSubscriptionOrgName;
        var displayText = subOrgName;

        if (subOrgName !== null) {
            displayText += " - " + row.NexportSubscriptionOrgShortName;
        }

        return textRenderer(displayText);
    }

    function renderLastModifiedDate(data, type, row, meta) {
        var textRenderer = $.fn.dataTable.render.text().display;
        var displayTime = row.UtcLastModifiedDate;

        if (displayTime !== null) {
            displayTime = moment.utc(displayTime).local().format("MM/DD/YYYY HH:mm:ss");
        }

        return textRenderer(displayTime);
    }

    $(document).ready(function () {
        //$.fn.bootstrapTypeahead = $.fn.typeahead.noConflict();

        $("#btnRefreshMappings").click(function () {
            //refresh grid
            $("#product-mappings-grid").DataTable().ajax.reload();

            //return false to don't reload a page
            return false;
        });
    });
</script>