@using Nop.Core
@using Nop.Plugin.Sale.CancelPendingOrderRequests.Domains.Enums
@using Nop.Plugin.Sale.CancelPendingOrderRequests.Models
@using Nop.Services.Common
@using Nop.Web.Framework.Models.DataTables

@inject IGenericAttributeService genericAttributeService
@inject IWorkContext workContext

@model Nop.Plugin.Sale.CancelPendingOrderRequests.Models.PendingOrderCancellationRequestSearchModel

@{
    ViewBag.Title = T("Admin.PendingOrderCancellationRequests").Text;
    Html.SetActiveMenuItemSystemName("Cancellation requests");

    const string hideSearchBlockAttributeName = "CancellationRequestsPage.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<nop-antiforgery-token />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.CancellationRequests")
    </h1>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                        <div class="search-text">@T("Admin.Common.Search")</div>
                        <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                        <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                    </div>

                    <div class="search-body @(hideSearchBlock ? "closed" : "")">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="StartDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="StartDate" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="EndDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="EndDate" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="RequestStatusId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="RequestStatusId" asp-items="Model.RequestStatusList" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-cancellationrequests" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <p>
                        @T("Admin.PendingOrderCancellationRequests.Description")
                    </p>
                    @await Html.PartialAsync("Table", new DataTablesModel
                    {
                        Name = "cancellation-requests-grid",
                        UrlRead = new DataUrl("List", "CancelPendingOrderRequests", null),
                        SearchButtonId = "search-cancellationrequests",
                        Length = Model.PageSize,
                        LengthMenu = Model.AvailablePageSizes,
                        Filters = new List<FilterParameter>
                        {
                            new FilterParameter(nameof(Model.StartDate)),
                            new FilterParameter(nameof(Model.EndDate)),
                            new FilterParameter(nameof(Model.RequestStatusId))
                        },
                        ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(PendingOrderCancellationRequestModel.Id))
                            {
                                Title = "Id",
                                Width = "100",
                                AutoWidth = false,
                            },
                            new ColumnProperty(nameof(PendingOrderCancellationRequestModel.OrderId))
                            {
                                Title = "Order",
                                ClassName = NopColumnClassDefaults.Button,
                                Render =  new RenderCustom("renderOrderInfo"),
                                Width = "100",
                                AutoWidth = false
                            },
                            new ColumnProperty(nameof(PendingOrderCancellationRequestModel.CustomerId))
                            {
                                Title = T("Admin.PendingOrderCancellationRequests.Fields.Customer").Text,
                                Width = "350",
                                Render = new RenderCustom("renderCustomerInfo")
                            },
                            new ColumnProperty(nameof(PendingOrderCancellationRequestModel.RequestStatus))
                            {
                                Title = T("Admin.PendingOrderCancellationRequests.Fields.RequestStatus").Text,
                                Width = "200",
                                Render = new RenderCustom("renderStatusInfo")
                            },
                            new ColumnProperty(nameof(PendingOrderCancellationRequestModel.UtcCreatedDate))
                            {
                                Title = T("Admin.PendingOrderCancellationRequests.Fields.UtcCreatedDate").Text,
                                Width = "100",
                                Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(PendingOrderCancellationRequestModel.Id))
                            {
                                Title = T("Admin.Common.Edit").Text,
                                Width = "100",
                                ClassName =  NopColumnClassDefaults.Button,
                                Render = new RenderButtonEdit(new DataUrl("Edit"))
                            }
                        }
                    })

                    <script>
                        function renderOrderInfo(data, type, row, meta) {
                            if (row.OrderId > 0) {
                                var textRenderer = $.fn.dataTable.render.text().display;
                                return "<a class=\"btn btn-default\" href=\"@Url.Content("~/Admin/Order/Edit/")" +
                                    row.OrderId + "\"><i class=\"fa fa-eye\"></i>" +
                                    textRenderer(row.OrderId) + " - @T("Admin.Common.View")</a>";
                            } else {
                                return "order item is deleted";
                            }
                        }

                        function renderCustomerInfo(data, type, row, meta) {
                            var textRenderer = $.fn.dataTable.render.text().display;
                            return "<a href=\"@Url.Content("~/Admin/Customer/Edit/")" + row.CustomerId + "\">" +
                                textRenderer(row.CustomerInfo) + "</a>";
                        }

                        function renderStatusInfo(data, type, row, meta) {
                            if (data === +"@((int)PendingOrderCancellationRequestStatus.Accepted)") {
                                return "Accepted";
                            } else if (data === +"@((int)PendingOrderCancellationRequestStatus.Received)") {
                                return "Received";
                            } else if (data === +"@((int)PendingOrderCancellationRequestStatus.Rejected)") {
                                return "Rejected";
                            }

                            return "Unknown";
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>